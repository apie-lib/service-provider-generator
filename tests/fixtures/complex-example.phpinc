<?php
namespace Example\OfSomeClass;

use Apie\ServiceProviderGenerator\UseGeneratedMethods;
use Illuminate\Support\ServiceProvider;

/**
 * This file is generated with apie/service-provider-generator from file: complex-example.yaml
 * @codecoverageIgnore
 * @phpstan-ignore
 */
class Test extends ServiceProvider
{
    use UseGeneratedMethods;

    function register()
    {
        $this->app->singleton(
            'apie.bounded_context.hashmap_factory',
            function ($app) {
                return new \Apie\ApieBundle\Wrappers\BoundedContextHashmapFactory(
                    $this->parseArgument('%apie.bounded_contexts%')
                );
            }
        );
        $this->app->singleton(
            \Apie\ApieBundle\Routing\ApieRouteLoader::class,
            function ($app) {
                return new \Apie\ApieBundle\Routing\ApieRouteLoader(
                    $app->make('apie.route_definitions.provider'),
                    $app->make('apie.bounded_context.hashmap'),
                    $this->parseArgument('%apie.cms.base_url%'),
                    $this->parseArgument('%apie.rest_api.base_url%')
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\Routing\ApieRouteLoader::class], 'routing.loader');
        $this->app->singleton(
            \Apie\ApieBundle\ContextBuilders\ServiceContextBuilder::class,
            function ($app) {
                return new \Apie\ApieBundle\ContextBuilders\ServiceContextBuilder(
                    $this->getTaggedServicesServiceLocator('apie.context')
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\ContextBuilders\ServiceContextBuilder::class], 'apie.core.context_builder');
        $this->app->singleton(
            \Apie\ApieBundle\ContextBuilders\SessionContextBuilder::class,
            function ($app) {
                return new \Apie\ApieBundle\ContextBuilders\SessionContextBuilder(
                    $app->make('request_stack')
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\ContextBuilders\SessionContextBuilder::class], 'apie.core.context_builder');
        $this->app->singleton(
            \Apie\ApieBundle\ContextBuilders\CsrfTokenContextBuilder::class,
            function ($app) {
                return new \Apie\ApieBundle\ContextBuilders\CsrfTokenContextBuilder(
                    $app->bound(\Symfony\Component\Security\Csrf\CsrfTokenManagerInterface::class) ? $app->make(\Symfony\Component\Security\Csrf\CsrfTokenManagerInterface::class) : null
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\ContextBuilders\CsrfTokenContextBuilder::class], 'apie.core.context_builder');
        $this->app->singleton(
            \Apie\ApieBundle\Wrappers\RequestAwareInMemoryDatalayer::class,
            function ($app) {
                return new \Apie\ApieBundle\Wrappers\RequestAwareInMemoryDatalayer(
                    $app->make(\Apie\ApieBundle\Wrappers\BoundedContextSelected::class)
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\Wrappers\RequestAwareInMemoryDatalayer::class], 'apie.datalayer');
        $this->app->singleton(
            \Apie\ApieBundle\Wrappers\BoundedContextSelected::class,
            function ($app) {
                return new \Apie\ApieBundle\Wrappers\BoundedContextSelected(
                    $app->make('request_stack'),
                    $app->make(\Apie\Core\BoundedContext\BoundedContextHashmap::class)
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\Wrappers\BoundedContextSelected::class], 'apie.context');
        $this->app->singleton(
            \Apie\ApieBundle\EventListeners\RenderErrorListener::class,
            function ($app) {
                return new \Apie\ApieBundle\EventListeners\RenderErrorListener(
                    $app->bound(\Apie\HtmlBuilders\Factories\ComponentFactory::class) ? $app->make(\Apie\HtmlBuilders\Factories\ComponentFactory::class) : null,
                    $app->bound(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class) ? $app->make(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class) : null,
                    $app->bound(\Twig\Environment::class) ? $app->make(\Twig\Environment::class) : null,
                    $this->parseArgument('%apie.cms.base_url%'),
                    $this->parseArgument('%apie.cms.error_template%')
                );
            }
        );
        $this->app->tag([\Apie\ApieBundle\EventListeners\RenderErrorListener::class], 'kernel.event_subscriber');
        $this->app->singleton(
            \Apie\Cms\RouteDefinitions\CmsRouteDefinitionProvider::class,
            function ($app) {
                return new \Apie\Cms\RouteDefinitions\CmsRouteDefinitionProvider(
                
                );
            }
        );
        $this->app->tag([\Apie\Cms\RouteDefinitions\CmsRouteDefinitionProvider::class], 'apie.core.route_definition');
        $this->app->singleton(
            \Apie\Cms\Controllers\DashboardController::class,
            function ($app) {
                return new \Apie\Cms\Controllers\DashboardController(
                    $app->make(\Apie\HtmlBuilders\Factories\ComponentFactory::class),
                    $app->make(\Apie\Core\ContextBuilders\ContextBuilderFactory::class),
                    $app->make(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class),
                    $app->make(\Apie\ApieBundle\Wrappers\DashboardContents::class)
                );
            }
        );
        $this->app->tag([\Apie\Cms\Controllers\DashboardController::class], 'controller.service_arguments');
        $this->app->bind(\Apie\Cms\EmptyDashboard::class, 'apie.cms.dashboard_content');
        
        $this->app->singleton(
            \Apie\Cms\EmptyDashboard::class,
            function ($app) {
                return new \Apie\Cms\EmptyDashboard(
                
                );
            }
        );
        $this->app->singleton(
            \Apie\Cms\Controllers\GetResourceListController::class,
            function ($app) {
                return new \Apie\Cms\Controllers\GetResourceListController(
                    $app->make(\Apie\Common\ApieFacade::class),
                    $app->make(\Apie\HtmlBuilders\Factories\ComponentFactory::class),
                    $app->make(\Apie\Core\ContextBuilders\ContextBuilderFactory::class),
                    $app->make(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class)
                );
            }
        );
        $this->app->tag([\Apie\Cms\Controllers\GetResourceListController::class], 'controller.service_arguments');
        $this->app->singleton(
            \Apie\Cms\Controllers\RunGlobalMethodFormController::class,
            function ($app) {
                return new \Apie\Cms\Controllers\RunGlobalMethodFormController(
                    $app->make(\Apie\Common\ApieFacade::class),
                    $app->make(\Apie\HtmlBuilders\Factories\ComponentFactory::class),
                    $app->make(\Apie\Core\ContextBuilders\ContextBuilderFactory::class),
                    $app->make(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class)
                );
            }
        );
        $this->app->tag([\Apie\Cms\Controllers\RunGlobalMethodFormController::class], 'controller.service_arguments');
        $this->app->singleton(
            \Apie\Cms\Controllers\CreateResourceFormController::class,
            function ($app) {
                return new \Apie\Cms\Controllers\CreateResourceFormController(
                    $app->make(\Apie\Common\ApieFacade::class),
                    $app->make(\Apie\HtmlBuilders\Factories\ComponentFactory::class),
                    $app->make(\Apie\Core\ContextBuilders\ContextBuilderFactory::class),
                    $app->make(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class)
                );
            }
        );
        $this->app->tag([\Apie\Cms\Controllers\CreateResourceFormController::class], 'controller.service_arguments');
        $this->app->singleton(
            \Apie\Cms\Controllers\ModifyResourceFormController::class,
            function ($app) {
                return new \Apie\Cms\Controllers\ModifyResourceFormController(
                    $app->make(\Apie\Common\ApieFacade::class),
                    $app->make(\Apie\HtmlBuilders\Factories\ComponentFactory::class),
                    $app->make(\Apie\Core\ContextBuilders\ContextBuilderFactory::class),
                    $app->make(\Apie\HtmlBuilders\Interfaces\ComponentRendererInterface::class)
                );
            }
        );
        $this->app->tag([\Apie\Cms\Controllers\ModifyResourceFormController::class], 'controller.service_arguments');
        $this->app->singleton(
            \Apie\Cms\Controllers\FormCommitController::class,
            function ($app) {
                return new \Apie\Cms\Controllers\FormCommitController(
                    $app->make(\Apie\Core\ContextBuilders\ContextBuilderFactory::class),
                    $app->make(\Apie\Common\ApieFacade::class),
                    $app->make(\Apie\HtmlBuilders\Configuration\ApplicationConfiguration::class),
                    $app->make(\Apie\Core\BoundedContext\BoundedContextHashmap::class)
                );
            }
        );
        $this->app->tag([\Apie\Cms\Controllers\FormCommitController::class], 'controller.service_arguments');
        $this->app->singleton(
            'cms.layout.graphite_design_system',
            function ($app) {
                return \Apie\CmsLayoutGraphite\GraphiteDesignSystemLayout::createRenderer(
                
                );
                
            }
        );
        
    }
}
